package it.smartcommunitylab.resourcemanager.dto;

import java.util.Arrays;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.smartcommunitylab.resourcemanager.model.Resource;
import it.smartcommunitylab.resourcemanager.serializer.ResourceDeserializer;
import it.smartcommunitylab.resourcemanager.serializer.ResourceSerializer;

@JsonSerialize(using = ResourceSerializer.class)
@JsonDeserialize(using = ResourceDeserializer.class)
@ApiModel(value = "Resource")
public class ResourceDTO {

    @ApiModelProperty(notes = "Resource ID - autogenerated", example = "123")
    public long id;

    @ApiModelProperty(notes = "Resource type", example = "sql")
    public String type;

    @ApiModelProperty(notes = "Resource provider", example = "postgres")
    public String provider;

    @ApiModelProperty(notes = "Resource name", example = "db1")
    public String name;

    @ApiModelProperty(notes = "Resource access URI - provider specific", example = "psql://user:pass@endpoint:1234/dbname")
    public String uri;

    @ApiModelProperty(notes = "Resource owner Id", example = "admin@local")
    public String userId;

    @ApiModelProperty(notes = "Resource scope Id", example = "default")
    public String scopeId;

    @ApiModelProperty(notes = "Resource properties map - class specific", example = "{}")
    public String properties;

    @ApiModelProperty(notes = "Resource managed?", example = "true")
    public boolean managed;

    @ApiModelProperty(notes = "Resource events subscribed?", example = "true")
    public boolean subscribed;

    @ApiModelProperty(notes = "Resource tags", example = "test")
    public String[] tags;

    public ResourceDTO() {
        id = 0;
        userId = "";
        scopeId = "";

        type = "";
        provider = "";
        name = "";
        uri = "";

        properties = "{}";

        managed = true;
        subscribed = true;

        tags = new String[0];
    }

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public String getProvider() {
        return provider;
    }

    public void setProvider(String provider) {
        this.provider = provider;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getUri() {
        return uri;
    }

    public void setUri(String uri) {
        this.uri = uri;
    }

    public String getScopeId() {
        return scopeId;
    }

    public void setScopeId(String scopeId) {
        this.scopeId = scopeId;
    }

    public String getUserId() {
        return userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public String getProperties() {
        return properties;
    }

    public void setProperties(String properties) {
        this.properties = properties;
    }

    public boolean isManaged() {
        return managed;
    }

    public void setManaged(boolean managed) {
        this.managed = managed;
    }

    public boolean isSubscribed() {
        return subscribed;
    }

    public void setSubscribed(boolean subscribed) {
        this.subscribed = subscribed;
    }

    public String[] getTags() {
        return tags;
    }

    public void setTags(String[] tags) {
        this.tags = tags;
    }

    @Override
    public String toString() {
        return "ResourceDTO [id=" + id + ", type=" + type + ", provider=" + provider + ", name=" + name + ", userId="
                + userId + ", scopeId=" + scopeId + ", managed=" + managed + ", subscribed=" + subscribed + ", tags="
                + Arrays.toString(tags) + "]";
    }

    public static ResourceDTO fromResource(Resource res) {
        ResourceDTO dto = new ResourceDTO();
        dto.id = res.getId();
        dto.userId = res.getUserId();
        dto.scopeId = res.getScopeId();

        dto.type = res.getType();
        dto.provider = res.getProvider();
        dto.name = res.getName();

        // clear private fields
        dto.uri = "";
        dto.properties = "{}";

        dto.managed = res.isManaged();
        dto.subscribed = res.isSubscribed();

        dto.tags = res.getTags().toArray(new String[0]);

        return dto;
    }

    public static ResourceDTO fromResource(Resource res, boolean includePrivate) {
        ResourceDTO dto = fromResource(res);
        if (includePrivate) {
            dto.uri = res.getUri();

            dto.properties = res.getProperties();
            if (dto.properties.isEmpty()) {
                dto.properties = "{}";
            }

        }

        return dto;
    }

}
